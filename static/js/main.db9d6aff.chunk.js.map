{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedBackOptions/FeedBackOptions.module.css","components/Notification/Notification.module.css","components/Section/Section.module.css","components/FeedBackOptions/FeedBackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","components/Section/Section.js","App.js","index.js"],"names":["module","exports","FeedbackOptions","onLeaveFeedback","options","className","s","container","map","name","button","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","title","text","Notification","message","Section","children","App","state","props","initialValue","handleIncrement","setState","prevState","this","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","Component","defaultProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,yBAAyB,QAAU,4BAA4B,IAAM,wBAAwB,MAAQ,4B,iBCA9JD,EAAOC,QAAU,CAAC,OAAS,gCAAgC,UAAY,qC,oBCAvED,EAAOC,QAAU,CAAC,KAAO,6B,gBCAzBD,EAAOC,QAAU,CAAC,MAAQ,yB,6JCuBXC,EAnBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,gBAAiBC,EAApB,EAAoBA,QAApB,OACtB,qBAAKC,UAAWC,IAAEC,UAAlB,SACGH,EAAQI,KAAI,SAAAC,GAAI,OACf,wBAAQJ,UAAWC,IAAEI,OAEnBC,KAAK,SACLC,QAAS,kBAAMT,EAAgBM,IAHjC,SAKGA,GAJIA,S,gBCmBEI,EAvBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,qCACE,oBAAIb,UAAWC,IAAEa,MAAjB,wBACCF,EAAQ,GACP,sBAAKZ,UAAWC,IAAEc,KAAlB,UACE,oBAAGf,UAAWC,IAAEQ,KAAhB,mBAA6BA,KAC7B,oBAAGT,UAAWC,IAAES,QAAhB,sBAAmCA,KACnC,oBAAGV,UAAWC,IAAEU,IAAhB,kBAA2BA,KAC3B,oBAAGX,UAAWC,IAAEc,KAAhB,oBAA8BH,KAC9B,oBAAGZ,UAAWC,IAAEc,KAAhB,gCAA0CF,EAA1C,c,gBCCOG,EAVM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,mCACE,mBAAGjB,UAAWC,IAAEc,KAAhB,SAAuBE,O,iBCQdC,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUL,EAAb,EAAaA,MAAb,OACd,gCACE,oBAAId,UAAWC,IAAEa,MAAjB,SAAyBA,IACxBK,MCACC,E,4MAKJC,MAAQ,CACNZ,KAAM,EAAKa,MAAMC,aACjBb,QAAS,EAAKY,MAAMC,aACpBZ,IAAK,EAAKW,MAAMC,c,EAIlBC,gBAAkB,SAAApB,GAChB,EAAKqB,UAAS,SAAAC,GAAS,sBAAQtB,EAAOsB,EAAUtB,GAAQ,O,4CAG1D,WACE,MAA+BuB,KAAKN,MAA5BZ,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAEjBiB,EAAqBnB,EAAOC,EAAUC,EAEtCkB,EAAkCC,KAAKC,MAC1CtB,EAAOmB,EAAsB,KAGhC,OAAQ,eAAC,EAAD,CAASd,MAAM,wBAAf,UAEN,cAAC,EAAD,CACEf,QAAS,CAAC,OAAQ,UAAW,OAC7BD,gBAAiB6B,KAAKH,kBAExB,cAAC,EAAD,CACEf,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOgB,EACPf,mBAAoBgB,IAEE,IAAvBD,GACC,cAAC,EAAD,CAAcX,QAAQ,2B,GAvCZe,aAAZZ,EACGa,aAAe,CACpBV,aAAc,GA8CHH,Q,MClDfc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.db9d6aff.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Statistics_text__Cdx0B\",\"good\":\"Statistics_good__3Hq5M\",\"neutral\":\"Statistics_neutral__1J8_J\",\"bad\":\"Statistics_bad__JWruK\",\"title\":\"Statistics_title__2mFxv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedBackOptions_button__5U7EK\",\"container\":\"FeedBackOptions_container__2WwPS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Notification_text__2QTpG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__jj4md\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './FeedBackOptions.module.css';\r\n\r\n\r\nconst FeedbackOptions = ({ onLeaveFeedback, options }) => (\r\n  <div className={s.container}>\r\n    {options.map(name => (\r\n      <button className={s.button}\r\n        key={name}\r\n        type=\"button\"\r\n        onClick={() => onLeaveFeedback(name)}\r\n      >\r\n        {name}\r\n      </button>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport s from './Statistics.module.css';\r\n\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <>\r\n    <h2 className={s.title}>Statistics</h2>\r\n    {total > 0 && (\r\n      <div className={s.text}>\r\n        <p className={s.good}>Good: {good}</p>\r\n        <p className={s.neutral}>Neutral: {neutral}</p>\r\n        <p className={s.bad}>Bad: {bad}</p>\r\n        <p className={s.text}>Total: {total}</p>\r\n        <p className={s.text}>Positive feedback: {positivePercentage}%</p>\r\n      </div>\r\n    )}\r\n  </>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './Notification.module.css';\r\n\r\nconst Notification = ({ message }) => {\r\n  return (\r\n    <>\r\n      <p className={s.text}>{message}</p>\r\n    </>\r\n  );\r\n};\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired\r\n};\r\nexport default Notification;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nconst Section = ({ children, title }) => (\r\n  <div>\r\n    <h2 className={s.title}>{title}</h2>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nSection.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Section;","import React, { Component } from \"react\";\n\nimport FeedbackOptions from \"./components/FeedBackOptions/FeedBackOptions\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport Notification from \"./components/Notification/Notification\";\nimport Section from \"./components/Section/Section\";\n\nclass App extends Component {\n  static defaultProps = {\n    initialValue: 0,\n  };\n\n  state = {\n    good: this.props.initialValue,\n    neutral: this.props.initialValue,\n    bad: this.props.initialValue,\n  };\n\n\n  handleIncrement = name => {\n    this.setState(prevState => ({ [name]: prevState[name] + 1 }));\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    const countTotalFeedback = good + neutral + bad;\n\n    const countPositiveFeedbackPercentage = Math.round(\n      (good / countTotalFeedback) * 100,\n    );\n\n    return (<Section title=\"Please leave feedback\">\n\n      <FeedbackOptions\n        options={['good', 'neutral', 'bad']}\n        onLeaveFeedback={this.handleIncrement}\n      />\n      <Statistics\n        good={good}\n        neutral={neutral}\n        bad={bad}\n        total={countTotalFeedback}\n        positivePercentage={countPositiveFeedbackPercentage}\n      />\n      {countTotalFeedback === 0 && (\n        <Notification message=\"No feedback yet\" />\n      )}\n    </Section>\n    )\n  }\n};\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\";\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}